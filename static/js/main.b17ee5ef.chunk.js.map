{"version":3,"sources":["components/PreparedPosts.jsx","components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["PreparedPosts","postsFromServer","map","post","user","usersFromServer","find","person","userId","id","comments","commentsFromServer","filter","comment","postId","CommentInfo","name","email","body","className","href","CommentList","length","UserInfo","PostInfo","title","PostList","posts","App","ReactDOM","render","document","getElementById"],"mappings":"q08IAIaA,EAAgBC,EAAgBC,KAAI,SAACC,GAChD,IAAMC,EAAOC,EAAgBC,MAAK,SAAAC,GAAM,OAAIJ,EAAKK,SAAWD,EAAOE,MAC7DC,EAAWC,EAAmBC,QAAO,SAAAC,GAAO,OAAIV,EAAKM,KACvDI,EAAQC,UAEZ,OAAO,2BACFX,GADL,IAEEC,OACAM,gB,OCZSK,EAAc,SAAC,GAAD,QACzBF,QAAWG,EADc,EACdA,KAAMC,EADQ,EACRA,MAAOC,EADC,EACDA,KADC,OAGzB,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SACGH,IAEF,OACD,mBACEG,UAAU,qBACVC,KAAI,iBAAYH,GAFlB,SAIGA,OAIL,qBAAKE,UAAU,oBAAf,SACGD,QCfMG,G,MAAc,SAAC,GAAD,IAAGX,EAAH,EAAGA,SAAH,OACzB,qBAAKS,UAAU,cAAf,SACuB,IAApBT,EAASY,OACNZ,EAASR,KAAI,SAAAW,GAAO,OACpB,cAAC,EAAD,CAAaA,QAASA,GAAcA,EAAQJ,OAE3C,mBAAG,UAAQ,oBAAX,iCCPIc,G,MAAW,SAAC,GAAD,QAAGnB,KAAQY,EAAX,EAAWA,KAAMC,EAAjB,EAAiBA,MAAjB,OACtB,8BACG,eAED,mBAAGE,UAAU,WAAWC,KAAI,iBAAYH,GAAxC,SACGD,SCHMQ,G,MAAW,SAAC,GAAD,QAAGrB,KACzBsB,EADsB,EACtBA,MACArB,EAFsB,EAEtBA,KACAc,EAHsB,EAGtBA,KACAR,EAJsB,EAItBA,SAJsB,OAMtB,sBAAKS,UAAU,WAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,oBAAIA,UAAU,kBAAd,SAAiCM,MAGnC,cAAC,EAAD,CAAUrB,KAAMA,IAEhB,mBAAGe,UAAU,iBAAb,SACGD,IAGkB,IAApBR,EAASY,QACR,uBAIF,cAAC,EAAD,CAAaZ,SAAUA,SCxBdgB,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKR,UAAU,WAAf,SACGQ,EAAMzB,KAAI,SAAAC,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKM,UCDzBmB,EAAM,kBACjB,0BAAST,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCACA,cAAC,EAAD,CAAUQ,MAAO3B,QCHrB6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b17ee5ef.chunk.js","sourcesContent":["import postsFromServer from '../api/posts.json';\nimport commentsFromServer from '../api/comments.json';\nimport usersFromServer from '../api/users.json';\n\nexport const PreparedPosts = postsFromServer.map((post) => {\n  const user = usersFromServer.find(person => post.userId === person.id);\n  const comments = commentsFromServer.filter(comment => post.id\n  === comment.postId);\n\n  return {\n    ...post,\n    user,\n    comments,\n  };\n});\n","export const CommentInfo = ({\n  comment: { name, email, body },\n}) => (\n  <div className=\"CommentInfo\">\n    <div className=\"CommentInfo__title\">\n      <strong className=\"CommentInfo__name\">\n        {name}\n      </strong>\n      {' by '}\n      <a\n        className=\"CommentInfo__email\"\n        href={`mailto:${email}`}\n      >\n        {email}\n      </a>\n    </div>\n\n    <div className=\"CommentInfo__body\">\n      {body}\n    </div>\n  </div>\n);\n","import { CommentInfo } from '../CommentInfo';\nimport './CommentList.scss';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    {comments.length !== 0\n      ? comments.map(comment => (\n        <CommentInfo comment={comment} key={comment.id} />\n      ))\n      : (<b data-cy=\"NoCommentsMessage\">No comments yet</b>)\n  }\n  </div>\n);\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ user: { name, email } }) => (\n  <p>\n    {' Posted by  '}\n\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  </p>\n\n);\n","import { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\nimport './PostInfo.scss';\n\nexport const PostInfo = ({ post: {\n  title,\n  user,\n  body,\n  comments,\n} }) => (\n  <div className=\"PostInfo\">\n    <div className=\"PostInfo__header\">\n      <h3 className=\"PostInfo__title\">{title}</h3>\n    </div>\n\n    <UserInfo user={user} />\n\n    <p className=\"PostInfo__body\">\n      {body}\n    </p>\n\n    {comments.length === 0 && (\n      <hr />\n    )\n    }\n\n    <CommentList comments={comments} />\n\n  </div>\n);\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo post={post} key={post.id} />\n    ))}\n  </div>\n);\n","import './App.scss';\nimport { PreparedPosts } from './components/PreparedPosts';\nimport { PostList } from './components/PostList';\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n    <PostList posts={PreparedPosts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}